run-name: GCP - ${{ github.event.inputs.config }}
name: FXCI - GCP

on:
  workflow_dispatch:
    inputs:
      config:
        type: choice
        description: Choose which pool to build
        options:
          - gw-fxci-gcp-l1-2404-gui-alpha
          - gw-fxci-gcp-l1-2404-headless-alpha
          - gw-fxci-gcp-l1-2404-arm64-headless-alpha

permissions:
  id-token: write
  contents: read

env:
  TARGET_BRANCH: RELOPS-1940

jobs:
  check-access:
    name: "Verify User Access"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Load Authorized Users and Check Access
        shell: pwsh
        run: |
          $AUTHORIZED_USERS = Get-Content .github/relsre.json | ConvertFrom-Json
          if ($AUTHORIZED_USERS -contains "${{ github.actor }}") {
            Write-Host "User ${{ github.actor }} is authorized."
          } else {
            Write-Host "User ${{ github.actor }} is unauthorized."
            exit 1
          }

  setproject:
    needs: check-access
    name: "Get Project ID & ImageName from Config"
    runs-on: ubuntu-latest
    outputs:
      IMAGENAME: ${{ steps.set-matrix.outputs.IMAGENAME }}
      PROJECT: ${{ steps.set-matrix.outputs.PROJECT }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        shell: pwsh
        run: |
          Import-Module ${{ github.workspace }}\bin\WorkerImages\WorkerImages.psm1
          Set-GCPWorkerImageName    -Key '${{ github.event.inputs.config }}'
          Set-GCPWorkerImageProject -Key '${{ github.event.inputs.config }}'

  packer:
    needs: setproject
    name: "GCP ${{ github.event.inputs.config }}"
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      # --- GCP Auth via WIF (Application Default Credentials for Packer) ---
      - uses: google-github-actions/auth@v2
        id: auth
        with:
          workload_identity_provider: "projects/324168772199/locations/global/workloadIdentityPools/github-actions/providers/github-actions"
          service_account: "deploy-prod@${{ needs.setproject.outputs.PROJECT }}.iam.gserviceaccount.com"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Packer
        uses: hashicorp/setup-packer@v3

      - name: Run Packer
        shell: pwsh
        env:
          # Pass through GH token for GitHub release/plugin throttling if needed
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKER_ENV_VAR_KEY: ${{ secrets.WORKER_ENV_VAR_KEY }}
          TC_WORKER_CERT:     ${{ secrets.TC_WORKER_CERT }}
          TC_WORKER_KEY:      ${{ secrets.TC_WORKER_KEY }}
        run: |
          Import-Module ${{ github.workspace }}\bin\WorkerImages\WorkerImages.psm1
          $Vars = @{
            github_token     = "${{ secrets.GITHUB_TOKEN }}"
            Key              = '${{ github.event.inputs.config }}'
            Worker_Env_Var_Key = "${{ secrets.WORKER_ENV_VAR_KEY }}"
            TC_worker_cert   = "${{ secrets.TC_WORKER_CERT }}"
            TC_worker_key    = "${{ secrets.TC_WORKER_KEY }}"
            Team             = "tceng"   # <â€” enable tceng layout
          }
          New-GCPWorkerImage @Vars

#  wiz:
#    needs: [packer, setproject]
#    name: "Wiz scan ${{ github.event.inputs.config }}"
#    runs-on: ubuntu-latest
#    environment: prod
#    steps:
#      - name: Download Wiz CLI
#        run: curl -o wizcli https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64 && chmod +x wizcli
#      - name: Authenticate to Wiz
#        run: ./wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"
#        env:
#          WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
#          WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}
#      - name: Run wiz-cli scan
#        run: |
#          ./wizcli vm-image scan \
#          --id ${{ needs.setproject.outputs.IMAGENAME }} \
#          --region us-west1 \
#          --subscriptionId ${{ needs.setproject.outputs.PROJECT }} \
#          --secrets \
#          --show-vulnerability-details \
#          --policy-hits-only
